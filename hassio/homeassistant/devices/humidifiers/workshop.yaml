input_boolean:
  workshop_humidifier_control:
    name: 'Workshop Humidifier: Control'
    icon: mdi:refresh-auto

template:
  binary_sensor:
    - unique_id: binary_sensor.workshop_humidifier_water_tank
      name: 'Workshop Humidifier Water Tank'
      icon: mdi:car-coolant-level
      device_class: connectivity
      state: >
        {{ not is_state('sensor.workshop_humidifier_water_level_raw', '127') }}
      availability: >
        {{ states('humidifier.workshop_humidifier') not in ['unknown', 'unavailable'] }}

    - unique_id: binary_sensor.workshop_humidifier_x_water_tank
      name: 'Workshop Humidifier X Water Tank'
      icon: mdi:car-coolant-level
      device_class: connectivity
      state: >
        {{ not is_state('sensor.workshop_humidifier_x_water_level_raw', '127') }}
      availability: >
        {{ states('humidifier.workshop_humidifier_x') not in ['unknown', 'unavailable'] }}

  sensor:
    - unique_id: binary_sensor.workshop_humidifier_water_level
      name: 'Workshop Humidifier Water Level'
      icon: mdi:water-check
      unit_of_measurement: '%'
      state: >
        {% set v = states('sensor.workshop_humidifier_water_level_raw')|int(0) %}
        {% if v > 125 %}
          0
        {% else %}
          {{ int(min(v / 1.2, 100)) }}
        {% endif %}
      availability: >
        {{ states('humidifier.workshop_humidifier') not in ['unknown', 'unavailable'] }}

    - unique_id: binary_sensor.workshop_humidifier_x_water_level
      name: 'Workshop Humidifier X Water Level'
      icon: mdi:water-check
      unit_of_measurement: '%'
      state: >
        {% set v = states('sensor.workshop_humidifier_x_water_level_raw')|int(0) %}
        {% if v > 125 %}
          0
        {% else %}
          {{ int(min(v / 1.2, 100)) }}
        {% endif %}
      availability: >
        {{ states('humidifier.workshop_humidifier_x') not in ['unknown', 'unavailable'] }}

    - unique_id: sensor.workshop_humidifier_target_mode
      name: 'Workshop Humidifier: Target mode'
      icon: mdi:target-variant
      state: >
        {% set mode = 'Level3' %}

        {% if states('sensor.workshop_humidity')|int(0) >= states('input_number.home_target_humidity')|int %}
          {% set mode = 'Level2' %}
        {% endif %}

        {% if states('sensor.workshop_humidity')|int(0) >= states('input_number.home_target_humidity')|int + 2 %}
          {% set mode = 'off' %}
        {% elif states('sensor.workshop_humidifier_water_level')|int(0) <= 15 %}
          {% set mode = 'off' %}
        {% endif %}

        {% if is_state('input_select.home_mode', 'Vacation') %}
          {% set mode = 'off' %}
        {% endif %}

        {{ mode }}

automation:
  - id: workshop_humidifier_update
    alias: 'Workshop Humidifier: Update'
    mode: queued
    max: 4
    max_exceeded: silent
    trigger:
      - platform: time_pattern
        minutes: '/7'

      - platform: state
        entity_id:
          - input_number.home_target_humidity
          - input_select.home_mode
    condition:
      - condition: template
        value_template: >
          {{ states('humidifier.workshop_humidifier') not in ['unavailable', 'unknown'] }}

      - condition: state
        entity_id:
          - input_boolean.climate_control
          - input_boolean.bedroom_humidifier_control
        state: 'on'
    action:
      - if:
          - condition: state
            entity_id: sensor.workshop_humidifier_target_mode
            state: 'off'
        then:
          - if:
              - condition: state
                entity_id: humidifier.workshop_humidifier
                state: 'on'
            then:
              - service: humidifier.turn_off
                entity_id: humidifier.workshop_humidifier
        else:
          - if:
              - condition: state
                entity_id: humidifier.workshop_humidifier
                state: 'off'
            then:
              - service: humidifier.turn_on
                entity_id: humidifier.workshop_humidifier

              - wait_template: >
                  {{ is_state('humidifier.workshop_humidifier', 'on') }}
                timeout:
                  seconds: 15
                continue_on_timeout: false

          - if:
              - condition: template
                value_template: >
                  {{ state_attr('humidifier.workshop_humidifier', 'mode') != states("sensor.workshop_humidifier_target_mode") }}
            then:
              - service: humidifier.set_mode
                entity_id: humidifier.workshop_humidifier
                data:
                  mode: '{{ states("sensor.workshop_humidifier_target_mode") }}'

  - id: workshop_humidifier_x_update
    alias: 'Workshop Humidifier X: Update'
    mode: queued
    max: 4
    max_exceeded: silent
    trigger:
      - platform: time_pattern
        minutes: '/7'

      - platform: state
        entity_id:
          - input_number.home_target_humidity
          - input_select.home_mode
    condition:
      - condition: template
        value_template: >
          {{ states('humidifier.workshop_humidifier_x') not in ['unavailable', 'unknown'] }}

      - condition: state
        entity_id:
          - input_boolean.climate_control
          - input_boolean.bedroom_humidifier_control
        state: 'on'
    action:
      - if:
          - condition: state
            entity_id: sensor.workshop_humidifier_target_mode
            state: 'off'
        then:
          - if:
              - condition: state
                entity_id: humidifier.workshop_humidifier_x
                state: 'on'
            then:
              - service: humidifier.turn_off
                entity_id: humidifier.workshop_humidifier_x
        else:
          - if:
              - condition: state
                entity_id: humidifier.workshop_humidifier_x
                state: 'off'
            then:
              - service: humidifier.turn_on
                entity_id: humidifier.workshop_humidifier_x

              - wait_template: >
                  {{ is_state('humidifier.workshop_humidifier_x', 'on') }}
                timeout:
                  seconds: 15
                continue_on_timeout: false

          - if:
              - condition: template
                value_template: >
                  {{ state_attr('humidifier.workshop_humidifier_x', 'mode') != states("sensor.workshop_humidifier_target_mode") }}
            then:
              - service: humidifier.set_mode
                entity_id: humidifier.workshop_humidifier_x
                data:
                  mode: '{{ states("sensor.workshop_humidifier_target_mode") }}'
