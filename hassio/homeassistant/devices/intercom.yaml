automation:
  - id: intercom_night_ring
    alias: 'Intercom: Night ring'
    trigger:
      - platform: state
        entity_id: sensor.intercom_status
        to: Incoming call
    condition:
      - condition: state
        entity_id: input_select.home_mode
        state: Night
    action:
      - service: notify.dextor
        data:
          message: üê∑ –ö—Ç–æ-—Ç–æ –ª–æ–º–∏—Ç—Å—è –≤ –¥–≤–µ—Ä—å –∫–æ–≥–¥–∞ –≤—Å–µ —Å–ø—è—Ç. –ú–æ–∂–µ—Ç –∫—É—Ä—å–µ—Ä?

  - id: intercom_mode_update
    alias: 'Intercom: Mode update'
    mode: single
    max_exceeded: silent
    trigger:
      - platform: time_pattern
        minutes: /5

      - platform: state
        entity_id:
          - input_select.home_mode
          - input_boolean.scene_delivery
          - input_boolean.scene_wait_guests
          - person.dextor
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.scene_delivery
                state: 'on'
            sequence:
              - service: select.select_option
                entity_id: select.intercom_mode
                data:
                  option: Delivery

          - conditions:
              - condition: state
                entity_id: input_boolean.scene_wait_guests
                state: 'on'
            sequence:
              - service: select.select_option
                entity_id: select.intercom_mode
                data:
                  option: Guests

          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: input_select.home_mode
                    state:
                      - Day
                      - Vacation

                  - condition: state
                    entity_id: binary_sensor.anyone_near_home
                    state: 'on'
            sequence:
              - service: select.select_option
                entity_id: select.intercom_mode
                data:
                  option: Always accept

          - conditions:
              - condition: state
                entity_id: input_select.home_mode
                state: Night

              - condition: template
                value_template: >
                  {{ (now() - state_attr('automation.ios_intercom_mode_accept',
                                         'last_triggered')|default(now() - timedelta(days=1), true)).total_seconds() > 300 }}
            sequence:
              - service: select.select_option
                entity_id: select.intercom_mode
                data:
                  option: Always reject

  - id: intercom_door_opened
    alias: 'Intercom: Door opened'
    trigger:
      - platform: state
        entity_id: sensor.intercom_status
        to: Door opened
    condition:
      - condition: state
        entity_id: binary_sensor.anyone_home
        state: 'on'

      - condition: state
        entity_id: input_select.home_mode
        state:
          - Day
          - Vacation

      - condition: template
        value_template: >
          {{ (now() - state_attr('automation.intercom_door_opened',
                                 'last_triggered')|default(now() - timedelta(days=1), true)).total_seconds() > 60 }}
    action:
      - service: media_player.media_pause
        entity_id: group.yandex_stations

      - if:
          - condition: state
            entity_id: media_player.atv
            state: playing
        then:
          - service: media_player.media_pause
            entity_id: media_player.atv

      - service: scene.create
        data:
          scene_id: intercom_door_opened
          snapshot_entities:
            - light.bathroom_main
            - light.kitchen_worktop
            - light.living_room_backlight_1
            - light.living_room_backlight_6
            - light.living_room_tv
            - light.workshop_main

      - repeat:
          for_each:
            - light.bathroom_main
            - light.kitchen_worktop
            - light.living_room_backlight_1
            - light.living_room_backlight_6
            - light.living_room_tv
            - light.workshop_main
          sequence:
            - service: script.turn_on
              entity_id: script.flash_light
              data:
                variables:
                  entity_id: '{{ repeat.item }}'
                  rgb_color: >
                    {% if repeat.item == 'light.living_room_backlight' %}
                      [0, 86, 255]
                    {% else %}
                      []
                    {% endif %}

      - delay:
          seconds: 2
          milliseconds: 200

      - service: scene.turn_on
        entity_id: scene.intercom_door_opened
        data:
          transition: 0.6

      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.scene_wait_guests
                state: 'on'
            sequence:
              - service: script.yandex_station_tts
                data:
                  target: all
                  type: alert
                  text: >
                    {{ [
                        '–ì–æ—Å—Ç–∏ —É–∂–µ –ø–æ—á—Ç–∏ –Ω–∞ –ø–æ—Ä–æ–≥–µ',
                        '–í–ø—É—Å—Ç–∏–ª–∞ –≥–æ—Å—Ç–µ–π –≤ –ø–æ–¥—ä–µ–∑–¥',
                        '–ì–æ—Å—Ç–∏ –≤–æ—Ç-–≤–æ—Ç –∑–∞–π–¥—É—Ç, –±–µ–≥–∏ –≤—Å—Ç—Ä–µ—á–∞—Ç—å',
                      ]|random
                    }}

          - conditions:
              - condition: state
                entity_id: input_boolean.scene_delivery
                state: 'on'
            sequence:
              - service: script.yandex_station_tts
                data:
                  target: all
                  type: alert
                  text: >
                    {{ [
                        '–ö—É—Ä—å–µ—Ä –ø—Ä–æ–Ω–∏–∫ –≤ –ø–æ–¥—å–µ–∑–¥, —Å—Ä–æ—á–Ω–æ –Ω–∞–¥–µ–≤–∞–π —Ç—Ä—É—Å–µ–ª—è –∏ –Ω–∞–∫—Ä—ã–≤–∞–π —Å—Ç–æ–ª',
                        '–ö—É—Ä—å–µ—Ä –≤ –ª–∏—Ñ—Ç–µ, –Ω–∞–ª–∏–≤–∞–π –Ω–∞–ø–∏—Ç–∫–∏!',
                        '–ö—É—Ä—å–µ—Ä —É–∂–µ –∑–¥–µ—Å—å, –∫–∞—Ä–∞—É–ª—å –¥–≤–µ—Ä—å',
                        '–ö–∞–∫ –∂–µ –≤–∫—É—Å–Ω–æ –ø–∞—Ö–Ω–µ—Ç! –ö—É—Ä—å–µ—Ä –ø–æ—á—Ç–∏ —É –¥–≤–µ—Ä–∏!'
                      ]|random
                    }}

          - conditions:
              - condition: template
                value_template: >
                  {{ state_attr('input_datetime.scene_delivery_scheduled_from', 'timestamp') <= as_timestamp(now()) <= state_attr('input_datetime.scene_delivery_scheduled_to', 'timestamp') }}
            sequence:
              - service: script.yandex_station_tts
                data:
                  target: all
                  type: alert
                  text: >
                    –û—Ç–∫—Ä—ã–ª–∞ –¥–≤–µ—Ä—å –∫—É—Ä—å–µ—Ä—É –¥–ª—è –ø–ª–∞–Ω–æ–≤–æ–π –¥–æ—Å—Ç–∞–≤–∫–∏, –≥–æ—Ç–æ–≤—å—Å—è –≤—Å—Ç—Ä–µ—á–∞—Ç—å
                    {% if is_state('person.dextor', 'Near Home') %}
                      , –∞ –º–æ–∂–µ—Ç —ç—Ç–æ –∏ –¢—ë–º—É—à–∫–∞
                    {% endif %}

          - conditions:
              - condition: state
                entity_id: person.dextor
                state: Near Home
            sequence:
              - service: script.yandex_station_tts
                data:
                  target: all
                  type: alert
                  text: >
                    {{ [
                        '–ö–∞–∂–µ—Ç—Å—è –¢—ë–º—É—à–∫–∞ –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è, —Å–∫–æ—Ä–µ–µ –±–µ–≥–∏ –≤—Å—Ç—Ä–µ—á–∞—Ç—å',
                        '–¢—ë–º—É—à–∫–∞ –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è, –æ–Ω –±—É–¥–µ—Ç —Ä–∞–¥ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å —Ç–µ–±—è —É –¥–≤–µ—Ä–∏',
                        '–í–æ—Ç-–≤–æ—Ç –∑–∞–π–¥—ë—Ç –¢—ë–º—É—à–∫–∞, –∏ —ç—Ç–æ –æ—á–µ–Ω—å –∑–¥–æ—Ä–æ–≤–æ!',
                      ]|random
                    }}

        default:
          - service: script.yandex_station_tts
            data:
              target: all
              type: alert
              text: >
                {{ [
                    '–ù–µ–∑–≤–∞–Ω–Ω—ã–µ –≥–æ—Å—Ç–∏ –Ω–∞ –ø–æ—Ä–æ–≥–µ, –≥–æ—Ç–æ–≤—å—Å—è!',
                    '–°–∫–æ—Ä–æ –ø–æ–∑–≤–æ–Ω—è—Ç –≤ –¥–≤–µ—Ä—å, —Å–∞–º–æ–µ –≤—Ä–µ–º—è –Ω–∞–¥–µ—Ç—å —Ç—Ä—É—Å–µ–ª—è',
                    '–Ø –∫–æ–≥–æ-—Ç–æ –≤–ø—É—Å—Ç–∏–ª–∞ –≤ –ø–æ–¥—ä–µ–∑–¥, —Å–∫–æ—Ä–æ —É–∑–Ω–∞–µ–º –∫–æ–≥–æ'
                  ]|random
                }}
